using Cosmos.System.Graphics;
using System.Drawing;

namespace CrystalOSAlpha.Graphics.Icons
{
    class TransportedIcons
    {
        static int[] folder = new int[960]
        {
            //height = 24, width =40
            0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            0,0,0,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,
            0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        };

        static int[] icon = new int[]
        {
                0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,
                0,0,0,0,1,2,1,2,2,2,2,2,2,2,1,0,0,
                0,0,0,1,2,2,1,2,2,2,2,2,2,2,1,0,0,
                0,0,1,2,2,2,1,2,2,2,2,2,2,2,1,0,0,
                0,1,1,1,1,1,1,2,2,2,2,2,2,2,1,0,0,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,
                0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
        };

        static int[] icon2 = new int[]
        {
                0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
                0,0,0,0,0,0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,0,0,0,0,1,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,0,0,0,1,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,0,0,1,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,0,1,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
                0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        };

        public static void FirstIcon(Bitmap input, int x, int y)
        {
            for (int h = 0; h < 27; h++)
            {
                for (int w = 0; w < 22; w++)
                {
                    if (icon2[h * 22 + w] == 1)
                    {
                        ImprovedVBE.DrawPixel(input, w + x, h + y, 1);
                    }
                    if (icon2[h * 22 + w] == 2)
                    {
                        ImprovedVBE.DrawPixel(input, w + x, h + y, ImprovedVBE.colourToNumber(255, 255, 255));
                    }
                }
            }
        }
        public static void FirstFolder(Bitmap input, int x, int y)
        {
            for (int h = 0; h < 24; h++)
            {
                for (int w = 0; w < 40; w++)
                {
                    switch(folder[h * 40 + w])
                    {
                        case 1:
                            ImprovedVBE.DrawPixel(input, w + x, h + y, Color.Orange.ToArgb());
                            break;
                        case 2:
                            ImprovedVBE.DrawPixel(input, w + x, h + y, Color.Yellow.ToArgb());
                            break;
                        case 3:
                            ImprovedVBE.DrawPixel(input, w + x, h + y, Color.White.ToArgb());
                            break;
                    }
                }
            }
        }
    }
}
